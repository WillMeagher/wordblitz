extends layout

block head
    script var time_left = #{time_left}
    script(src="/javascripts/game.js")
    link(rel='stylesheet', href='/stylesheets/game.css')
    

block content
  div.text-center
    - var first = true;
    - var allCorrect = false;
    - var allGuesses = true;
    - var charColors = {};
    - var topRow = ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p"];
    - var middleRow = ["a", "s", "d", "f", "g", "h", "j", "k", "l"];
    - var bottomRow = ["z", "x", "c", "v", "b", "n", "m"];
    - var defaultGuess = new Array(parseInt(len, 10)).fill(" ").join("");

    div 
        div.spacer.d-flex
            if (time_left >= 0 && !gameOver)
                h2#timer.m-auto #{Math.floor(time_left / 60) + ":" + ("0" + (time_left % 60)).slice(-2)}
            else if (time_left < 0 && game.guesses.filter(x => x !== null).length < 6)
                h2.m-auto Times Up

        each word in game.guesses
            div.d-flex.justify-content-center.text-center

                if (word != null)
                    - allCorrect = true;
                    each char in word
                        if (char.accuracy == "correct")
                            - charColors[char.char] = "success";
                            div.input.success #{char.char}
                        else if (char.accuracy == "close")
                            - if (charColors[char.char] == undefined || charColors[char.char] == "danger") charColors[char.char] = "warning";
                            - allCorrect = false;    
                            div.input.warning #{char.char}
                        else
                            - if (charColors[char.char] == undefined) charColors[char.char] = "danger";
                            - allCorrect = false;
                            div.input.danger #{char.char}

                else if (first && !allCorrect)

                    - allGuesses = false;
                    form#answer-form.text-center(name="guess", method="post", inputmode='none', action=process.env.APP_URL + "/game/guess/" + type + "/" + len)
                        div(style="height: 0px; width: 0px;")
                            input#guess(style="opacity: 0; height: 0; width: 0;", readonly, type="text", name="guess", value=defaultGuess, maxlength=len, autocomplete="off")
                            input(type="submit", style="display: none")

                    - for(var i = 0; i < len; i++)
                        - if (i == 0)
                            div.input.cur-input.focus(id="select"+i, onclick="onClickSelect(this)")
                        - else
                            div.input.cur-input(id="select"+i, onclick="onClickSelect(this)")

                    - first = false;

                else 
                    - for(var i = 0; i < len; i++)
                        div.input
                                    
    div.spacer              
        if (gameOver && !allCorrect)
            p.m-0.mt-3.answer
                | The word was 
                strong #{game.word}
        if (gameOver)
            div.mt-3
                button.ms-2.me-2.btn.btn-info(onclick="window.location.href='/game/#{type}/#{len}'") Play Again
                button.ms-2.me-2.btn.btn-info(onclick="window.location.href='/game'") Back

    if (!gameOver)
        div#keyboard.top-100.mb-2
            div.d-flex.justify-content-center
                each char in topRow
                    div.key(class="#{charColors[char]}", onclick="onClickKey(this)") #{char}

            div.d-flex.justify-content-center
                div.key-spacer

                each char in middleRow
                    div.key(class="#{charColors[char]}", onclick="onClickKey(this)") #{char}

                div.key-spacer

            div.d-flex.justify-content-center
                div.key-spacer

                div.key(onclick="onClickKey(this)")
                    i.fa.fa-level-down-alt.fa-rotate-90

                each char in bottomRow
                    div.key(class="#{charColors[char]}", onclick="onClickKey(this)") #{char}

                div.key(onclick="onClickKey(this)")
                    i.fa.fa-backspace
    
                div.key-spacer

            div.d-flex.justify-content-center
                div.key.space(onclick="onClickKey(this)") _
        
